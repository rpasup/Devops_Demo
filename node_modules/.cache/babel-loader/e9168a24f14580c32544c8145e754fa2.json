{"ast":null,"code":"var _jsxFileName = \"/home/rajasekhar/Desktop/assignment04/src/products/AddNewProduct/ProductForm.js\";\nimport React from \"react\";\nimport { Formik } from \"formik\";\nimport \"./styles.css\";\nimport { addProduct } from \"../../flux/actions/productActions\";\nimport { useHistory } from \"react-router-dom\";\nimport { addProductAPI } from \"../../data/api\";\nexport const ProductForm = props => {\n  const history = useHistory();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"Enter Product Details!!\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      productName: \"\",\n      productQuantity: \"\",\n      productPrice: \"\"\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.productName) {\n        errors.productName = \"Product name is required\";\n      }\n\n      if (!values.productQuantity) {\n        errors.productQuantity = \"Product quantity is required\";\n      }\n\n      if (!values.productPrice) {\n        errors.productPrice = \"Product price is required\";\n      }\n\n      return errors;\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        const product = {\n          productName: values.productName,\n          quantity: values.productQuantity,\n          price: values.productPrice\n        };\n        addProductAPI(product).then(response => {\n          addProduct(product);\n          alert(\"Product added succesfully\");\n          history.push(\"/products\");\n        }).catch(() => {});\n        setSubmitting(false);\n      }, 400);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n    /* and other goodies */\n\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"productName\",\n    placeholder: \"Enter Product Name\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.productName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), errors.productName && touched.productName && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, errors.productName), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"productQuantity\",\n    placeholder: \"Enter Product Quantity\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.productQuantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), errors.productQuantity && touched.productQuantity && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, errors.productQuantity), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"productPrice\",\n    placeholder: \"Enter Product Price\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.productPrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), errors.productPrice && touched.productPrice && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, errors.productPrice), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttonWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, \"Submit\")))));\n};","map":{"version":3,"sources":["/home/rajasekhar/Desktop/assignment04/src/products/AddNewProduct/ProductForm.js"],"names":["React","Formik","addProduct","useHistory","addProductAPI","ProductForm","props","history","productName","productQuantity","productPrice","values","errors","setSubmitting","setTimeout","product","quantity","price","then","response","alert","push","catch","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport \"./styles.css\";\r\nimport { addProduct } from \"../../flux/actions/productActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { addProductAPI} from \"../../data/api\";\r\n\r\nexport const ProductForm = (props) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"formContainer\">\r\n      <h2>Enter Product Details!!</h2>\r\n      <Formik\r\n        initialValues={{\r\n          productName: \"\",\r\n          productQuantity: \"\",\r\n          productPrice: \"\",\r\n        }}\r\n        validate={(values) => {\r\n          const errors = {};\r\n\r\n          if (!values.productName) {\r\n            errors.productName = \"Product name is required\";\r\n          }\r\n          if (!values.productQuantity) {\r\n            errors.productQuantity = \"Product quantity is required\";\r\n          }\r\n          if (!values.productPrice) {\r\n            errors.productPrice = \"Product price is required\";\r\n          }\r\n\r\n          return errors;\r\n        }}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setTimeout(() => {\r\n            const product = {\r\n              productName: values.productName,\r\n              quantity: values.productQuantity,\r\n              price: values.productPrice,\r\n            };\r\n            addProductAPI(product)\r\n              .then((response) => {\r\n                addProduct(product);\r\n                alert(\"Product added succesfully\");\r\n                history.push(\"/products\");\r\n              })\r\n              .catch(() => {});\r\n            setSubmitting(false);\r\n          }, 400);\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n\r\n          errors,\r\n\r\n          touched,\r\n\r\n          handleChange,\r\n\r\n          handleBlur,\r\n\r\n          handleSubmit,\r\n\r\n          isSubmitting,\r\n\r\n          /* and other goodies */\r\n        }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"productName\"\r\n              placeholder=\"Enter Product Name\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.productName}\r\n            />\r\n            <br />\r\n\r\n            {errors.productName && touched.productName && (\r\n              <span className=\"error\">{errors.productName}</span>\r\n            )}\r\n            <br />\r\n\r\n            <input\r\n              type=\"text\"\r\n              name=\"productQuantity\"\r\n              placeholder=\"Enter Product Quantity\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.productQuantity}\r\n            />\r\n            <br />\r\n\r\n            {errors.productQuantity && touched.productQuantity && (\r\n              <span className=\"error\">{errors.productQuantity}</span>\r\n            )}\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"productPrice\"\r\n              placeholder=\"Enter Product Price\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.productPrice}\r\n            />\r\n            <br />\r\n\r\n            {errors.productPrice && touched.productPrice && (\r\n              <span className=\"error\">{errors.productPrice}</span>\r\n            )}\r\n            <br />\r\n            <div className=\"buttonWrapper\">\r\n              <button type=\"submit\" disabled={isSubmitting}>\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}